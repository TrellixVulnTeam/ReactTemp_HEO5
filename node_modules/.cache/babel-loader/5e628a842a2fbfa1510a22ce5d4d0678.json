{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactNew\\\\ReactJS\\\\src\\\\Components\\\\MemberShip\\\\ChangePassword\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Grid, Input, InputAdornment, InputLabel, Typography, IconButton } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePassword() {\n  _s();\n\n  const [inputValue, setInputValue] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    reNewPassword: \"\"\n  });\n  const listInput = [{\n    label: \"Old Password\",\n    value: inputValue.oldPassword,\n    name: \"oldPassword\"\n  }, {\n    label: \"New Password\",\n    value: inputValue.newPassowrd,\n    name: \"newPassword\"\n  }, {\n    label: \"Re-New Password\",\n    value: inputValue.reNewPassword,\n    name: \"reNewPassword\"\n  }];\n\n  const onChange = e => {\n    setInputValue({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"container \",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"my-5 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: \"font-family-Ad\",\n          color: \"white \",\n          children: \"Change My Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), listInput.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(InputChange, {\n          item: item,\n          onChange: onChange\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"oxP2UFySwyG2l+TmIRlK7M1hrGo=\");\n\n_c = ChangePassword;\n\nconst InputChange = props => {\n  _s2();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 8,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      sx: {\n        color: \"#999\"\n      },\n      children: props.item.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: show ? \"text\" : \"password\",\n      className: \"form-control member-input\",\n      value: props.item.value,\n      onChange: props.onChange,\n      name: props.item.name,\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setShow(!show),\n          children: show ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n            sx: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n            sx: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(InputChange, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c2 = InputChange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangePassword\");\n$RefreshReg$(_c2, \"InputChange\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactNew/ReactJS/src/Components/MemberShip/ChangePassword/index.jsx"],"names":["Box","Grid","Input","InputAdornment","InputLabel","Typography","IconButton","React","useState","VisibilityIcon","VisibilityOffIcon","ChangePassword","inputValue","setInputValue","oldPassword","newPassword","reNewPassword","listInput","label","value","name","newPassowrd","onChange","e","target","map","item","index","InputChange","props","show","setShow","color"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nexport default function ChangePassword() {\r\n  const [inputValue, setInputValue] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    reNewPassword: \"\",\r\n  });\r\n\r\n  const listInput = [\r\n    {\r\n      label: \"Old Password\",\r\n      value: inputValue.oldPassword,\r\n      name: \"oldPassword\",\r\n    },\r\n    {\r\n      label: \"New Password\",\r\n      value: inputValue.newPassowrd,\r\n      name: \"newPassword\",\r\n    },\r\n    {\r\n      label: \"Re-New Password\",\r\n      value: inputValue.reNewPassword,\r\n      name: \"reNewPassword\",\r\n    },\r\n  ];\r\n\r\n  const onChange = (e) => {\r\n    setInputValue({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"container \">\r\n      <Grid container justifyContent=\"center\" spacing={1}>\r\n        <Grid item xs={12} className=\"my-5 text-center\">\r\n          <Typography variant=\"h4\" className=\"font-family-Ad\" color=\"white \">\r\n            Change My Password\r\n          </Typography>\r\n        </Grid>\r\n        {listInput.map((item, index) => {\r\n          return <InputChange item={item} key={index} onChange={onChange} />;\r\n        })}\r\n        <Grid item xs={8}>\r\n          Save\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst InputChange = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <Grid item xs={8}>\r\n      <InputLabel sx={{ color: \"#999\" }}>{props.item.label}</InputLabel>\r\n      <Input\r\n        type={show ? \"text\" : \"password\"}\r\n        className=\"form-control member-input\"\r\n        value={props.item.value}\r\n        onChange={props.onChange}\r\n        name={props.item.name}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={() => setShow(!show)}>\r\n              {show ? (\r\n                <VisibilityIcon sx={{ color: \"white\" }} />\r\n              ) : (\r\n                <VisibilityOffIcon sx={{ color: \"white\" }} />\r\n              )}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}